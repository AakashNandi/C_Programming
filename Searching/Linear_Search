/*Algorithm:-

Step 1> Start.
Step 2> Define the array with the elements {23, 56, 67, 78}.
Step 3> Define the target element to search (67).
Step 4> Iterate through each element of the array.
Step 5> If the current element is equal to the target element, print the index and exit.
Step 6> If the current element is not equal to the target, continue to the next element.
Step 7> If the target element is not found after checking all elements, print that the element is not found.
Step 8> End.

*/

Code:-

#include <stdio.h>

// Function to perform linear search
int linearSearch(int array[], int size, int target) {
    for (int i = 0; i < size; i++) {
        if (array[i] == target) {
            return i; // Return the index of the target element
        }
    }
    return -1; // Return -1 if the target element is not found (A sign of failure)
}

int main() {
    
    int array[] = {23, 56, 67, 78};
    int size = sizeof(array) / sizeof(array[0]);  //Dividing the total size of the array (sizeof(array)) - here 16 bytes (4bytes*4)
                                                //by the size of one element (sizeof(array[0])) - here 4 bytes gives the number of elements in the array = 4.
    int target = 67;
    
    // Perform linear search by calling the linearsearch function
    int result = linearSearch(array, size, target);
    
    // For Output:
    if (result != -1) {
        printf("Element %d found at index: %d\n", target, result);
    } else {
        printf("Element %d not found in the array.\n", target);
    }
    
    return 0;  //Symbolizes successful execution
}
